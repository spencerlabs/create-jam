name: Pull Request
on:
  workflow_call:
    inputs:
      name:
        required: true
        description: "Name of the application (ex. 'react')"
        type: string
      command:
        required: true
        description: "Command used to create app"
        type: string
      cli:
        default: false
        description: "Is this a CLI install?"
        type: boolean
      color:
        required: true
        default: ''
        description: "Color to apply to GitHub label (ex. 'E99695')"
        type: string
  workflow_dispatch:
    inputs:
      name:
        required: true
        description: "Name of the application (ex. 'react')"
        type: string
      command:
        required: true
        description: "Command used to create app"
        type: string
      cli:
        default: false
        description: "Is this a CLI install?"
        type: boolean
      color:
        required: true
        default: ''
        description: "Color to apply to GitHub label (ex. 'E99695')"
        type: string

jobs:
  create_pr:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: PR message
        id: pr_message
        run: |
          if [ "${{ inputs.package }}" == "" ]; then
            echo "message=yarn create ${{ inputs.command }}" >> $GITHUB_OUTPUT
          else
            echo "message=${{ inputs.command }}" >> $GITHUB_OUTPUT
          fi

      - name: Create PR
        # an error here most likely means PR already exists, so we let it pass
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh label create 'template/${{ inputs.name }}' -f -d 'Update ${{ inputs.name }} templates' -c ${{ inputs.color }}
          gh pr create -B ${{ github.event.repository.default_branch }} -H template/${{ inputs.name }} -l template/${{ inputs.name }} -t 'Updating ${{ inputs.name }} template(s)' -b ':robot: *An automated PR*
          Generated template(s) with `${{ steps.pr_message.outputs.message }}` in `./templates/${{ inputs.name }}`'
