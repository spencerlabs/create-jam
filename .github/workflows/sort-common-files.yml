name: Sort Common Files
on:
  workflow_call:
    inputs:
      app:
        required: true
        description: "Type of app to sort common files (ex. 'react' or 'redwood')"
        type: string
  workflow_dispatch:
    inputs:
      app:
        required: true
        description: "Type of app to sort common files (ex. 'react' or 'redwood')"
        type: string

jobs:
  sort_files:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          path: repo

      - name: Setup node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Sort common files
        run: |
          yarn cfs ${{ inputs.app }}

        # create or switch to template branch
      - name: Switch to template branch
        run: |
          git config user.name "${{ inputs.app }}-app bot"
          git config user.email "<>"
          git config pull.rebase false
          git switch -c template/${{ inputs.app }}

      - name: Check for remote branch
        id: remote_check
        # failure handled in next step, so we let it pass
        continue-on-error: true
        run: |
          git ls-remote --exit-code --heads origin template/${{ inputs.app }}

        # pull or create remote branch
      - name: Create or pull remote
        run: |
          if [ "${{ steps.remote_check.outcome }}" == "failure" ]; then
            git push origin template/${{ inputs.app }}
          else
            git pull origin template/${{ inputs.app }}
          fi

      - name: Commit changes
        # an error here most likely means no changes, so we let it pass
        continue-on-error: true
        run: |
          git add ./templates/${{ inputs.app }}
          git commit -m 'Update ${{ inputs.app }} common files '
          git push origin template/${{ inputs.app }}

      - name: Create PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create -B ${{ github.event.repository.default_branch }} -H template/${{ inputs.app }} -l template/${{ inputs.app }} -t 'Sort common files for ${{ inputs.app }} templates' -b ':robot: *An automated PR*

          Sort common files in `./templates/${{ inputs.app }}`'
